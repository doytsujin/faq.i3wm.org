<?xml version="1.0" encoding="utf-8"?>
<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title>i3 FAQ - Individual question feed</title><link>https://faq.i3wm.org/questions/</link><description>Frequently asked questions and answers about the i3 window manager</description><atom:link href="http://faq.i3wm.org/feeds/question/3882/" rel="self"></atom:link><language>en</language><copyright>Copyright i3, 2012</copyright><lastBuildDate>Tue, 27 May 2014 02:50:36 +0000</lastBuildDate><item><title>PX vs PPT for resize</title><link>https://faq.i3wm.org/question/3882/px-vs-ppt-for-resize/</link><description>I made this as a comment to another question but it was probably too old. Anyway:

Is there a reason i3 doesn't support either pixel values or fractional resize PPT values for tiled windows? Since ppx isn't supported and PPT values get rounded to the nearest int you can only resize to approximately the value you wanted. 

Example: say I have 3 containers split evenly; correct me if I'm wrong but it's impossible to resize one to 50%. This is a trivial example that could be solved by messing with the tree but you see where I'm going, there are certain layouts that are possible to get to from others.</description><pubDate>Mon, 26 May 2014 00:23:09 +0000</pubDate><guid>https://faq.i3wm.org/question/3882/px-vs-ppt-for-resize/</guid></item><item><title>Answer by ANOKNUSA for &lt;p&gt;I made this as a comment to another question but it was probably too old. Anyway:&lt;/p&gt;

&lt;p&gt;Is there a reason i3 doesn't support either pixel values or fractional resize PPT values for tiled windows? Since ppx isn't supported and PPT values get rounded to the nearest int you can only resize to approximately the value you wanted. &lt;/p&gt;

&lt;p&gt;Example: say I have 3 containers split evenly; correct me if I'm wrong but it's impossible to resize one to 50%. This is a trivial example that could be solved by messing with the tree but you see where I'm going, there are certain layouts that are possible to get to from others.&lt;/p&gt;
 </title><link>https://faq.i3wm.org/question/3882/px-vs-ppt-for-resize/?answer=3887#post-id-3887</link><description>I hope I'll be corrected if I'm wrong, but the fact as I understand it is that i3 (or any window manager, for that matter) does not determine window sizes on its own. How it resizes windows is in part dictated by how each application on screen handles internal visuals (or how its toolkit does, perhaps). The most common examples in the *nix world are terminal emulators, which user their own internal grid for text rendering and thus cannot be resized fractionally.</description><pubDate>Mon, 26 May 2014 13:12:19 +0000</pubDate><guid>https://faq.i3wm.org/question/3882/px-vs-ppt-for-resize/?answer=3887#post-id-3887</guid></item><item><title>Comment by joek1010 for &lt;p&gt;I hope I'll be corrected if I'm wrong, but the fact as I understand it is that i3 (or any window manager, for that matter) does not determine window sizes on its own. How it resizes windows is in part dictated by how each application on screen handles internal visuals (or how its toolkit does, perhaps). The most common examples in the *nix world are terminal emulators, which user their own internal grid for text rendering and thus cannot be resized fractionally.&lt;/p&gt;
</title><link>https://faq.i3wm.org/question/3882/px-vs-ppt-for-resize/?comment=3888#comment-3888</link><description>I think this is incorrect. i3 dictates the size of the window that an app can draw in down to the pixel level. Proof is that you can resize floating windows with pixel level granularity with i3; I think the PPT argument restriction (must provide PPT and it is rounded) is one imposed by i3.</description><pubDate>Tue, 27 May 2014 02:50:36 +0000</pubDate><guid>https://faq.i3wm.org/question/3882/px-vs-ppt-for-resize/?comment=3888#comment-3888</guid></item></channel></rss>